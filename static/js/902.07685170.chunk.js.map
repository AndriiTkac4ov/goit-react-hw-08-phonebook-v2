{"version":3,"file":"static/js/902.07685170.chunk.js","mappings":"8PAEaA,EAAgBC,EAAAA,GAAAA,IAAH,4IAQbC,EAAgBD,EAAAA,GAAAA,GAAH,mHAET,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAKTC,EAAOL,EAAAA,GAAAA,KAAH,yIAQJM,EAAaN,EAAAA,GAAAA,MAAH,wMAKN,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAKTG,EAAaP,EAAAA,GAAAA,MAAH,4LAEN,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAGD,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAKbI,EAAeR,EAAAA,GAAAA,OAAH,gtBAKJ,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAGT,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAID,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,I,UCwC1B,EArFqB,WACjB,IAAMK,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAGMC,EAAoB,SAAC,GAAgC,IAAD,IAA7BC,OAAUP,EAAmB,EAAnBA,KAAMQ,EAAa,EAAbA,MACzC,OAAQR,GACJ,IAAK,OACD,OAAOC,EAAQO,GACnB,IAAK,QACD,OAAOL,EAASK,GACpB,IAAK,WACD,OAAOH,EAAYG,GAEvB,QACI,OAEX,EAYD,OACI,UAACrB,EAAD,YACI,SAACE,EAAD,6CAEA,UAACI,EAAD,CAAMgB,SAdO,SAACC,GAClBA,EAAMC,iBAENd,EAASe,EAAAA,EAAAA,SAAwB,CAAEZ,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAEhDH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACf,EAMO,WACI,UAACX,EAAD,mBAEI,SAACC,EAAD,CACIkB,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,aAAa,MACbC,YAAY,OACZV,MAAOR,EACPmB,SAAUb,QAIlB,UAACZ,EAAD,oBAEI,SAACC,EAAD,CACIkB,KAAK,QACLb,KAAK,QACLgB,UAAQ,EACRC,aAAa,MACbC,YAAY,iBACZV,MAAON,EACPiB,SAAUb,QAIlB,UAACZ,EAAD,uBAEI,SAACC,EAAD,CAEIkB,KAAK,WACLb,KAAK,WACLgB,UAAQ,EACRC,aAAa,MACbC,YAAY,aACZV,MAAOJ,EACPe,SAAUb,QAKlB,SAACV,EAAD,CAAciB,KAAK,SAAnB,0BAIf,C","sources":["pages/Register/Register.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegisterGroup = styled.div`\n    margin: 0;\n    padding: 16px 40px;\n    text-align: center;\n    background: lavender;\n    color: chocolate;\n`;\n\nexport const RegisterTitle = styled.h2`\n    margin: 0 0 8px 0;\n    font-size: ${props => props.theme.spacing(3)};\n    font-weight: 500;\n    line-height: 1.5;\n`;\n\nexport const Form = styled.form`\n    width: 400px;\n    margin-right: auto;\n    margin-left: auto;\n    margin-bottom: 16px;\n    padding: 8px;\n`;\n\nexport const LabelField = styled.label`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 16px;\n    font-size: ${props => props.theme.spacing(2)};\n    font-weight: 500;\n    line-height: 1.2;\n`;\n\nexport const InputField = styled.input`\n    padding: 12px;\n    font-size: ${props => props.theme.spacing(2)};\n    line-height: 1.2;\n    border: 1px solid chocolate;\n    border-radius: ${props => props.theme.spacing(1)};\n    width: 284px;\n    cursor: pointer;\n`;\n\nexport const ButtonAdding = styled.button`\n/* toggle password */\n    /* display: block;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: ${props => props.theme.spacing(2)}; */\n/* toggle password */\n    padding: 8px 24px;\n    font-size: ${props => props.theme.spacing(2)};\n    font-weight: 700;\n    line-height: 1.2;\n    border: 1px solid chocolate;\n    border-radius: ${props => props.theme.spacing(1)};\n    cursor: pointer;\n    background: burlywood;\n    color: honeydew;\n    transition: background-color 0.25s ease-in-out, color 0.25s ease-in-out, border-color 0.25s ease-in-out, transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        background: chocolate;\n        color: springgreen;\n        border: 1px solid springgreen;\n        transform: scale(1.1);\n    }\n`;","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { authOperations } from \"redux/auth/auth-operations\";\nimport {\n    RegisterGroup,\n    RegisterTitle,\n    Form,\n    LabelField,\n    InputField,\n    ButtonAdding,\n} from \"./Register.styled\";\n\nconst RegisterPage = () => {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    // const [isPassword, setIsPassword] = useState(true);\n\n    const handleInputChange = ({ target: { name, value }}) => {\n        switch (name) {\n            case 'name':\n                return setName(value);\n            case 'email':\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            \n            default:\n                return;\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        \n        dispatch(authOperations.register({ name, email, password }));\n\n        setName('');\n        setEmail('');\n        setPassword('');\n    }\n\n    return (\n        <RegisterGroup>\n            <RegisterTitle>Please Sign in Your Phonebook</RegisterTitle>\n\n            <Form onSubmit={handleSubmit}>\n                <LabelField>\n                    Name\n                    <InputField\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        autoComplete=\"off\"\n                        placeholder=\"Name\"\n                        value={name}\n                        onChange={handleInputChange}\n                    />\n                </LabelField>\n\n                <LabelField>\n                    Email\n                    <InputField\n                        type=\"email\"\n                        name=\"email\"\n                        required\n                        autoComplete=\"off\"\n                        placeholder=\"name@email.com\"\n                        value={email}\n                        onChange={handleInputChange}\n                    />\n                </LabelField>\n\n                <LabelField>\n                    Password\n                    <InputField\n                        // type={isPassword ? \"password\" : \"text\"}\n                        type=\"password\"\n                        name=\"password\"\n                        required\n                        autoComplete=\"off\"\n                        placeholder=\"Name123456\"\n                        value={password}\n                        onChange={handleInputChange}\n                    />\n                </LabelField>\n\n                {/* <ButtonAdding type=\"button\" onClick={() => setIsPassword(prev => !prev)}>Show Password</ButtonAdding> */}\n                <ButtonAdding type=\"submit\">Sign In</ButtonAdding>\n            </Form>\n        </RegisterGroup>\n    )\n}\n\nexport default RegisterPage;"],"names":["RegisterGroup","styled","RegisterTitle","props","theme","spacing","Form","LabelField","InputField","ButtonAdding","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleInputChange","target","value","onSubmit","event","preventDefault","authOperations","type","pattern","title","required","autoComplete","placeholder","onChange"],"sourceRoot":""}